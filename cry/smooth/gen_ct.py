#!/usr/bin/python3

p = 22960179950332796986814237716580359117578355030886991633563905454345149093977217656219366569294775215449171830354845907909937829202533358988518024380582823854381536959325457870999602326362828512325213721244217087851895920352368281665606010450760022378875691968690073982983642645189581530133860369892837424307182900273024596073555932581747494971036858305102974400771937818306431539690536936254394350958363349155939995011420256537195645293389871342178222022444801776053244498844666464389118592226756524088876214285117019206035957387658913293739311122917666151458648623670705693362330730622374534903512963762757724865819

primes = [18159483435771255379, 18246008227771792913, 18353120081261497783, 18391509959665624283, 18420548427123207229, 18434958041914966891, 18189958641177466721, 18072481203497442511, 18362997414545766673, 18196325044181063441, 18107526042434713051, 18287954881521181249, 18235401697977180833, 18292245591562292983, 18262075579397590001, 18411801130598231773, 18377749324618289369, 18106104909531467117, 18197943051562651469, 18390656168692157183, 18303771618911578381, 18130111242668268281, 18155116105591513309, 18287793748043038657, 18179298730338477761, 18288399030408160057, 18327479207877724861, 18128579828291071093, 18279768681612792817, 18150332662278074701, 18172863048465716483, 18132842465546955301]

g = 2 #can be used to forge signatures, seems irrelevant for decryption


flag = b"CSSOC{d01n6_NuM8312_ThE0rY_l!k3_A_PRO}"

from Crypto import Random
from Crypto.PublicKey import ElGamal
from Crypto.Util import number

import json

x = number.getRandomRange(2, p-1, randfunc=Random.new().read)
y = pow(g, x, p)

k = number.getRandomRange(2, p-1, randfunc=Random.new().read)

key = ElGamal.construct((p, g, y, x))
ct = key.encrypt(flag, k)


j_key = {'g':format(g, 'x'), 'p':format(p, 'x'), 'y':format(y, 'x')}
j_msg = {'c1':ct[0].hex(), 'c2':ct[1].hex()}

with open('key.json', 'w') as f:
    f.write(json.dumps(j_key))

with open('msg.json', 'w') as f:
    f.write(json.dumps(j_msg))
